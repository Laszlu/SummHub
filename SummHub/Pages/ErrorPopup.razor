@*********************************************************************************************************************@
@* von Laszlo *@

@using SummHub.Controller
@inject ErrorController ErrorController

<div class="error-popup-body">
    <div class="error-icon">
        <img src="images/warning.png" alt="warning icon"/>
    </div>
    <div class="error-text">
        <label>
             @(ErrorController.Exception != null ? ErrorController.Exception.InnerException.Message : "")
        </label>
    </div>
</div>


@code {
    [Parameter]
    public EventCallback CloseErrorPopup { get; set; }
    [Parameter]
    public EventCallback ForceUpdateUi { get; set; }
    
    protected override void OnInitialized()
    {
        ClosePopup();
        base.OnInitialized();
    }

    private async void ClosePopup()
    {
        await Task.Run(async delegate
        {
            await Task.Delay(TimeSpan.FromSeconds(15));
            await CloseErrorPopup.InvokeAsync();
            ForceUpdateUi.InvokeAsync();
        });
    }
}
@*********************************************************************************************************************@