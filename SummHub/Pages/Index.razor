@page "/"
@using Controller
@using Model
@inject ControllerManager Manager
@inject NewsApiController NewsApi
@inject ArticlesService ArticleService
@inject MsTranslatorApiController Translator

<PageTitle>Index</PageTitle>

<div class="category-container">
    <button class="category-button" @onclick="() => LoadPageContent(Category.TopStories)">
        Top Stories
    </button>
    <button class="category-button" @onclick="() => LoadPageContent(Category.Sports)">
        Sports
    </button>
    <button class="category-button" @onclick="() => LoadPageContent(Category.Politics)">
        Politics
    </button>
    <button class="category-button" @onclick="() => LoadPageContent(Category.Science)">
        Science
    </button>
    <button class="category-button" @onclick="() => LoadPageContent(Category.Business)">
        Business
    </button>
    <button class="category-button" @onclick="() => LoadPageContent(Category.Entertainment)">
        Entertainment
    </button>
</div>

@if (_testBool)
{
    <div class="tiles-container">
        @foreach (var article in CurrentArticles)
        {
            <div class="tile">
                <div>
                    <img src="https://www.tagesspiegel.de/gesellschaft/medien-_-ki/images/google-logo/alternates/BASE_1_1_W1000/google-logo.jpeg" alt="Placeholder"/>
                </div>
                @if (article.Title.Length > 70)
                {
                    <h2>@article.Title.Substring(0, Math.Min(article.Title.Length, 70))...</h2>
                }
                else
                {
                    <h2>@article.Title</h2>
                }
            </div>
        }
    </div>
}

@code {
    private bool _testBool;

    private List<NewsArticle> CurrentArticles { get; set; } = new();

    //TODO: Load TopStories on Start with Loading animation

    private async void LoadPageContent(Category category)
    {
        if (ArticleService.GetArticleList(category)!.Count > 0)
        {
            CurrentArticles = ArticleService.GetArticleList(category)!;
            StateHasChanged();
        }
        else
        {
            if (await Manager.LoadContent(NewsApi, category, Translator))
            {
                _testBool = true;
                CurrentArticles = ArticleService.GetArticleList(category)!;
                StateHasChanged();
            }
        }
    }

    private async void Test()
    {
        //var result = await Manager.testfunc();
        //TestString = result;

        if (await Manager.LoadContent(NewsApi, Category.TopStories, Translator))
        {
            _testBool = true;
            Console.WriteLine(_testBool);
            Console.WriteLine(CurrentArticles);
        }

        StateHasChanged();
    }

}